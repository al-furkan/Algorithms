#include<bits/stdc++.h>
using namespace std;
int knap01(int we[],int va[], int n,int ca){
 int dp[n+1][ca+1];
 for(int i=0;i<=n;i++){
    for(int j=0; j<=ca;j++){
        if(i==0||j==0){
            dp[i][j]=0;
        }
        else if(we[i-1]>j){
            dp[i][j]=dp[i-1][j];
        }
        else{
            dp[i][j]= max(dp[i-1][j],va[i-1]+dp[i-1][j-we[i-1]]);
        }
    }
 }

 return dp[n][ca];


}



int main(){

int we[]={2,3,4,6};
int va[]={3,4,5,6};
int ca = 5;

int n=4;
int max_value = knap01(we,va,n,ca);


cout<<"maximum propit "<<max_value<<endl;


}
